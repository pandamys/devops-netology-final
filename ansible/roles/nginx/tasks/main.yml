---
    - name: update apt packages
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install Nginx Web Server on Debian Family
      apt:
        name=nginx
        state=latest
      when: ansible_os_family == "Debian"
      notify:
        - nginx systemd

    - name: Install Nginx Web Server on RedHat Family
      yum:
        name=nginx
        state=latest
      when: ansible_os_family == "RedHat"
      notify:
        - nginx systemd

    - name: Replace nginx.conf
      template:
        src=templates/nginx.conf
        dest=/etc/nginx/nginx.conf

    - name: Add virtual domain in NGINX
      template:
        src=templates/nginx_vhosts.conf
        dest=/etc/nginx/conf.d/vhosts.conf

    - name: "Create required directories in /etc/letsencrypt"
      file:
        path: "/etc/letsencrypt/{{ item }}"
        state: directory
        owner: root
        group: root
        mode: u=rwx,g=x,o=x
      with_items:
        - account
        - certs
        - csrs
        - keys

    - name: "Generate a Let's Encrypt account key"
      shell: "if [ ! -f {{ letsencrypt_account_key }} ]; then openssl genrsa 4096 | sudo tee {{ letsencrypt_account_key }}; fi"

    - name: "Generate Let's Encrypt private key"
      shell: "openssl genrsa 4096 | sudo tee /etc/letsencrypt/keys/{{ domain_name }}.key"

    - name: "Generate Let's Encrypt CSR"
      shell: "openssl req -new -sha256 -key /etc/letsencrypt/keys/{{ domain_name }}.key -subj \"/CN={{ domain_name }}\" -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf \"\n[SAN]\nsubjectAltName=DNS:{{ domain_name }},DNS:www.{{ domain_name }},DNS:{{ prometheus_domain }},DNS:{{ gitlab_domain }},DNS:{{ grafana_domain }},DNS:{{ alertmanager_domain }}\")) | sudo tee /etc/letsencrypt/csrs/{{ domain_name }}.csr"
      args:
        executable: /bin/bash

    - name: "Begin Let's Encrypt challenges"
      acme_certificate:
        acme_directory: "{{ acme_directory }}"
        acme_version: "{{ acme_version }}"
        account_key_src: "{{ letsencrypt_account_key }}"
        account_email: "{{ acme_email }}"
        terms_agreed: 1
        challenge: "{{ acme_challenge_type }}"
        csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
        dest: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.crt"
        fullchain_dest: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}.crt"
        remaining_days: 91
      register: acme_challenge_pandamys_ru

    - name: "Create .well-known/acme-challenge directory"
      file:
        path: /var/www/html/.well-known/acme-challenge
        state: directory
        owner: root
        group: root
        mode: u=rwx,g=rx,o=rx

    - name: "Implement challenge files"
      copy:
        content: "{{ acme_challenge_pandamys_ru['challenge_data'][item]['http-01']['resource_value'] }}"
        dest: "/var/www/html/{{ acme_challenge_pandamys_ru['challenge_data'][item]['http-01']['resource'] }}"
        owner: root
        group: root
        mode: u=rw,g=r,o=r
      with_items:
      - "{{ domain_name }}"
      - "www.{{ domain_name }}"
      - "{{ grafana_domain }}"
      - "{{ gitlab_domain }}"
      - "{{ alertmanager_domain }}"
      - "{{ prometheus_domain }}"

    - name: "Complete Let's Encrypt challenges"
      acme_certificate:
        acme_directory: "{{ acme_directory }}"
        acme_version: "{{ acme_version }}"
        account_key_src: "{{ letsencrypt_account_key }}"
        account_email: "{{ acme_email }}"
        challenge: "{{ acme_challenge_type }}"
        csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
        dest: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.crt"
        chain_dest: "{{ letsencrypt_certs_dir }}/chain_{{ domain_name }}.crt"
        fullchain_dest: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}"
        data: "{{ acme_challenge_pandamys_ru }}"
      notify:
        - nginx systemd