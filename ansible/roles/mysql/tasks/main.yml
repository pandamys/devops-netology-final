---
    - name: update apt packages
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: "upload mysql cluster"
      get_url:
        url: "https://dev.mysql.com/get/Downloads/MySQL-Cluster-8.0/mysql-cluster-community-management-server_{{ mysql_version }}-1ubuntu20.04_amd64.deb"
        dest: "/tmp/mysql-{{ mysql_version }}-linux-x86_64.deb"
        mode: 0755
        timeout: 60
        force: true
        validate_certs: false
      register: get_mysql_cluster
      until: get_mysql_cluster is succeeded
      tags: mysql
      when: inventory_hostname == "mysql-db01"

    - name: "upload mysql data-node"
      get_url:
        url: "https://dev.mysql.com/get/Downloads/MySQL-Cluster-8.0/mysql-cluster-community-data-node_{{ mysql_version }}-1ubuntu20.04_amd64.deb"
        dest: "/tmp/mysql-{{ mysql_version }}-dn-linux-x86_64.deb"
        mode: 0755
        timeout: 60
        force: true
        validate_certs: false
      register: get_mysql_dn
      until: get_mysql_dn is succeeded
      tags: mysql

    - name: "upload mysql"
      get_url:
        url: "https://dev.mysql.com/get/Downloads/MySQL-Cluster-8.0/mysql-cluster_{{ mysql_version }}-1ubuntu20.04_amd64.deb-bundle.tar"
        dest: "/tmp/mysql-cluster-{{ mysql_version }}-linux-x86_64.tar"
        mode: 0755
        timeout: 60
        force: true
        validate_certs: false
      register: get_mysql
      until: get_mysql is succeeded
      tags: mysql

    - name: "install depency mysql dn"
      apt:
        name: "{{ item }}"
        state: latest
      with_items:
        - 'libclass-methodmaker-perl'
        - 'libaio1'
        - 'libmecab2'
      when: ansible_os_family == "Debian"

    - name: "Install mysql mgmn"
      apt:
        deb: "/tmp/mysql-{{ mysql_version }}-linux-x86_64.deb"
      when: inventory_hostname == "mysql-db01"

    - name: "Install mysql dn"
      apt:
        deb: "/tmp/mysql-{{ mysql_version }}-dn-linux-x86_64.deb"

    - name: "Create dir for cluster"
      file:
        path: "{{ mysql_cluster_dir }}"
        state: directory
        owner: root
        group: root
        mode: u=rwx,g=x,o=x
      when: inventory_hostname == "mysql-db01"

    - name: "Create directrory for install"
      file:
        state: directory
        path: "{{ mysql_unarchive }}"

    - name: "Extract mysql"
      unarchive:
        copy: false
        src: "/tmp/mysql-cluster-{{ mysql_version }}-linux-x86_64.tar"
        dest: "{{ mysql_unarchive }}"
        creates: "{{ mysql_unarchive }}/mysql-server_{{ mysql_version }}-1ubuntu20.04_amd64.deb"

    - name: "Install server mysql"
      apt:
        deb: "{{ mysql_unarchive }}/mysql-server_{{ mysql_version }}-1ubuntu20.04_amd64.deb"

    - name: "Copy config mysql-cluster.cnf"
      template:
        src=templates/mysql-cluster.cnf
        dest="{{ mysql_cluster_dir }}/config.ini"
      when: inventory_hostname == "mysql-db01"

    - name: "copy ndb_mgmd.service file"
      copy:
        src: ndb_mgmd.service
        dest: /etc/systemd/system/ndb_mgmd.service
      when: inventory_hostname == "mysql-db01"

    - name: "Initialize ndb_mgmd"
      service:
        name: ndb_mgmd
        state: started
      when: inventory_hostname == "mysql-db01"

    - name: "Copy config my.cnf"
      template:
        src=templates/my.cnf
        dest="/etc/my.cnf"

    - name: "copy ndbd.service file"
      copy:
        src: ndbd.service
        dest: /etc/systemd/system/ndbd.service

    - name: "reload daemon ndbd"
      shell: systemctl daemon-reload

    - name: "Initialize ndbd"
      service:
        name: ndbd
        state: started

    - name: "Restart mysql"
      service:
        name: mysql
        state: restarted
